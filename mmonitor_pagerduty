#!/usr/bin/env python

import smtplib
import sys
import urllib2

FROM_ADDR = 'mmonitor@corp.mixpanel.com'
TO_ADDR = 'integration-test@mixpanel2.pagerduty.com'

class HeadRequest(urllib2.Request):
    def get_method(self):
        return 'HEAD'

def check_if_sites_down():
    # simply pings www.mixpanel.com and api.mixpanel.com
    # if not 200, kicks off pagerduty incident via email

    check_site('http://mixpanel.com')
    check_site('http://api.mixpanel.com')

def check_site(url):
    try:
        resp = urllib2.urlopen(HeadRequest(url), data=None, timeout=30) # seconds
        if resp.status != 200:
            send_pagerduty_email(url, resp.msg)
    except:
        pass # todo: logging. should also possibly send pagerduty if monitoring fails

def send_pagerduty_email(url, body):
    try:
       msg = format_pagerduty_email(FROM_ADDR, TO_ADDR, url, body)

       smtp = smtplib.SMTP('localhost', 25, timeout=30)
       smtp.ehlo_or_helo_if_needed()
       smtp.sendmail(FROM_ADDR, TO_ADDR, msg)
       smtp.close() # todo: move to finally block
    except:
        pass

def format_pagerduty_email(from_addr, to_addr, url, body):
    subject = url # todo: add date format 
    msg = 'From: %s\nTo: %s\nSubject: %s\n%s\n' % (from_addr, to_addr, subject, body,)
    return msg

if __name__ == '__main__':
    nargs = len(sys.argv)
    if nargs > 1 and sys.argv[1] == 'test':
        # quick test in lieu of proper unit tests
        send_pagerduty_email('http://www.foo.com', 'test msg')
    else:
        # normal usage
        check_if_site_down()
